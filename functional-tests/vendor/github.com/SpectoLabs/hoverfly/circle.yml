machine:
  services:
   - docker

  environment:
    GOPATH: /home/ubuntu/.go_workspace

checkout:
  post:
    - mkdir -p $GOPATH/src/github.com/SpectoLabs/hoverfly || echo "project dir already exists"
    - "rsync -az --delete ./ $GOPATH/src/github.com/SpectoLabs/hoverfly"

dependencies:
  pre:
    - sudo add-apt-repository -y ppa:masterminds/glide
    - sudo apt-get update
    - sudo apt-get install -y glide

test:
  override:
    - "cd $GOPATH/src/github.com/SpectoLabs/hoverfly && make build"

deployment:
  head:
    branch: master
    commands:
      - "echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update"
      - "sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json"
      - "sudo /opt/google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT"
      - "cd $GOPATH/src/github.com/SpectoLabs/hoverfly && docker build -t eu.gcr.io/specto-sandbox/hoverfly:$CIRCLE_BUILD_NUM  -f core/Dockerfile ."
      - "sudo /opt/google-cloud-sdk/bin/gcloud docker push eu.gcr.io/specto-sandbox/hoverfly:$CIRCLE_BUILD_NUM"
  loadtest:
    tag: /load-test/
    commands:
      - "echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update alpha"
      - "sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json"
      - "sudo /opt/google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME"
      - "sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME"
      - "git clone https://${GITHUB_TOKEN}@github.com/SpectoLabs/hoverfly-load-testing && cd hoverfly-load-testing && sudo \"PATH=$PATH\" ./load-test.sh"
  release:
    tag: /v[0-9]+(\.[0-9]+)*/
    commands:
      - go get github.com/aktau/github-release
      - go get github.com/mitchellh/gox
      - "echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update alpha"
      - "sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json"
      - "sudo /opt/google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME"
      - "sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}"
      - "sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME"
      - "cd $GOPATH/src/github.com/SpectoLabs/hoverfly && docker build -t eu.gcr.io/specto-sandbox/hoverfly:$CIRCLE_BUILD_NUM  -f core/Dockerfile ."
      - "sudo /opt/google-cloud-sdk/bin/gcloud docker push eu.gcr.io/specto-sandbox/hoverfly:$CIRCLE_BUILD_NUM"
      - "docker tag eu.gcr.io/specto-sandbox/hoverfly:$CIRCLE_BUILD_NUM spectolabs/hoverfly:$CIRCLE_TAG"
      - "docker tag eu.gcr.io/specto-sandbox/hoverfly:$CIRCLE_BUILD_NUM spectolabs/hoverfly:latest"
      - "docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS"
      - "docker push spectolabs/hoverfly:$CIRCLE_TAG"
      - "docker push spectolabs/hoverfly:latest"
      - "cd $GOPATH/src/github.com/SpectoLabs/hoverfly && make build-release GIT_TAG_NAME=$CIRCLE_TAG SHELL=/bin/bash"
      - "cd $GOPATH/src/github.com/SpectoLabs/hoverfly/target && for f in hover*;do github-release upload  --user SpectoLabs --repo hoverfly --tag \"$CIRCLE_TAG\" --name \"$f\" --file \"$f\"; done" 
